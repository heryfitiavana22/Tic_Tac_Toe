{"version":3,"file":"js/main.js","mappings":"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","sources":["webpack://tic-tac-toe/./src/css/style.css","webpack://tic-tac-toe/./src/ts/circle.ts","webpack://tic-tac-toe/./src/ts/croix.ts","webpack://tic-tac-toe/./src/ts/point.ts","webpack://tic-tac-toe/./src/ts/tableGame.ts","webpack://tic-tac-toe/webpack/bootstrap","webpack://tic-tac-toe/webpack/runtime/make namespace object","webpack://tic-tac-toe/./src/ts/main.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","import Point from \"./point\";\n\nclass Circle extends Point {\n    createAdjacentMatrix(x: number, y: number) {\n        for (let i = 0; i < x; i++) {\n            this.adjacentMatrix.push([0, 0, 0]);\n        }\n        // console.log(this.adjacentMatrix);\n    }\n\n    pushCoords(x: number, y: number) {\n        this.adjacentMatrix[x][y] = 1;\n        // console.log(this.adjacentMatrix);\n    }\n\n    check(coordsWinner: CoordsWinner[]) {\n        // convertir la matrice d'adjacence en string pour faciliter la verification\n        // ex : 1,0,0,1,0,0,1,0,0 => 100100100\n        let coords = this.adjacentMatrix.toString().split(\",\").join(\"\"),\n            // ex : 100100100, 010010010, 001001001\n            col = /(1|0){0,2}[1](1|0){2}[1](1|0){2}[1](1|0){0,2}/,\n            // ex : 111000000, 000111000, 000000111\n            row = /([1]{3}(1|0){6})|((1|0){3}[1]{3}(1|0){3})|((1|0){6}[1]{3})/,\n            // ex : 100010001\n            diagonal = /[1](1|0){3}[1](1|0){3}[1]/,\n            // ex : 001010100\n            contreDiagonal = /(1|0){2}[1](1|0){1}[1](1|0){1}[1](1|0){2}/;\n        console.log(coords);\n        if(col.test(coords)) {\n            console.log(\"winner circle col\"); \n        }\n        if(row.test(coords)) {\n            console.log(\"winner circle row\");\n        }\n        if(diagonal.test(coords)) {\n            console.log(\"winner circle diagonal\");\n        }\n        if(contreDiagonal.test(coords)) {\n            console.log(\"winner circle contrediagonal\");\n        }\n    }\n}\n\nexport default Circle;\n","import Point from \"./point\";\n\nclass Croix extends Point {\n    createAdjacentMatrix(x: number, y: number) {\n        for(let i=0; i<x; i++) {\n            for(let j=0; j<y; j++) {\n                this.adjacentMatrix.push([0,0,0])\n            }\n        }\n    }\n\n    pushCoords(x: number, y: number) {\n        // this.adjacentMatrix[x][y] = 1\n    }\n\n    check(coordsWinner: CoordsWinner[]) {\n        \n        let coords = this.adjacentMatrix.toString()\n        // console.log(coords);\n        \n        if(coords.includes(\"1,1,1\")){\n            console.log(\"winner croix\");\n            \n        }\n    }\n}\n\nfunction push<T>(U: T[], V: T[]): T[] {\n    return U.length === 0 ? [...V] : [...U, ...V]\n}\n\nexport default Croix;\n","abstract class Point {\n    // list coordinate\n    adjacentMatrix: AdjacentMatrix = []\n    constructor(x: number, y: number) {\n        // this.adjacentMatrix[x][y] = 1\n    }\n    abstract createAdjacentMatrix(x: number, y: number): void\n    abstract pushCoords(x: number, y: number): void\n    abstract check(coordsWinner: CoordsWinner[]): void\n}\n\nexport default Point;\n","class TableGame {\n    currentPlayer = 1;\n    // dimension\n    x: number;\n    y: number;\n    // currentPoint: Point = circle;\n    private _currentPointHTML = '<span class=\"point circle\"></span';\n\n    constructor(x: number, y: number) {\n        this.x = x;\n        this.y = y;\n    }\n\n    drawTable() {\n        let casesHTML = ``;\n        for (let i = 0; i < this.x; i++) {\n            for (let j = 0; j < this.y; j++) {\n                casesHTML += `<div class=\"case\" id=\"${i};${j}\"></div>`;\n            }\n        }\n        (document.querySelector(\".container\") as HTMLElement).innerHTML =\n            casesHTML;\n    }\n\n    drawPoint(caseHTML: HTMLDivElement) {\n        // if there is a point\n        if (caseHTML.innerHTML.length > 0) return;\n\n        caseHTML.innerHTML = this._currentPointHTML;\n        caseHTML.style.cursor = \"not-allowed\";\n        // player 1 : circle; player 2: croix\n        // change currentPointHTML , currentPlayer and currentPoint\n        if (this.currentPlayer === 1) {\n            return (this._currentPointHTML =\n                '<span class=\"point croix\"></span>');\n        }\n\n        this._currentPointHTML = '<span class=\"point circle\"></span';\n    }\n\n    getCoordsWinner(): CoordsWinner[] {\n        // sequence des coordonnée gagnant\n        let coordsWinner: CoordsWinner[] = [];\n\n        let diagonal: Coordinate[] = [];\n        for (let i = 1; i <= this.x; i++) {\n            let col: Coordinate[] = [],\n                row: Coordinate[] = [];\n            for (let j = 1; j <= this.y; j++) {\n                col.push([i, j]);\n                row.push([j, i]);\n            }\n            coordsWinner.push([col]);\n            coordsWinner.push([row]);\n\n            diagonal.push([i, i]);\n        }\n        coordsWinner.push([diagonal]);\n        // contre diagonal\n        let contreDiagonal: Coordinate[] = [\n            [3, 1],\n            [2, 2],\n            [1, 3],\n        ];\n        coordsWinner.push([contreDiagonal]);\n\n        return coordsWinner;\n    }\n\n    checkWinner(currentPoint: Point, coordsWinner: CoordsWinner[], x: number, y: number) {\n        currentPoint.pushCoords(x, y);\n        currentPoint.check(coordsWinner);\n    }\n}\n\nfunction checkDimension(x: number) {\n    // if(x !== y) throw new Error(\"x is not equal to y\")\n    // if((x < 3) || (x > 5)) throw new Error(\"dimension between 3 and 5\")\n\n    return function (constructor: any, propertykey: string) {\n        console.log(constructor);\n    };\n}\n\nexport default TableGame;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import \"../css/style.css\";\nimport TableGame from \"./tableGame\";\nimport Circle from \"./circle\";\nimport Croix from \"./croix\";\n\n\nlet tableGame = new TableGame(3, 3);\n// tableGame.drawTable();\nlet coordsWinner = tableGame.getCoordsWinner();\nlet circle: Point = new Circle(0, 0),\n    croix: Point = new Croix(0, 0);\ncircle.createAdjacentMatrix(3,3)\ncroix.createAdjacentMatrix(3,3)\n\nlet container = document.querySelector(\".container\") as HTMLDivElement;\ncontainer.onclick = (e: MouseEvent) => {\n    let target = e.target as HTMLDivElement,\n        coords = target.id.split(\";\"),\n        x = Number(coords[0]),\n        y = Number(coords[1]);\n\n    // si on a cliqué sur une balise à part la \".case\" (ex: .point; gap)\n    if (coords.length !== 2) return;\n    tableGame.drawPoint(target);\n    // check winner and change currentPlayer\n    if (tableGame.currentPlayer === 1) {\n        tableGame.checkWinner(circle, coordsWinner, x, y);\n        tableGame.currentPlayer = 2;\n    } else {\n        tableGame.checkWinner(croix, coordsWinner, x, y);\n        tableGame.currentPlayer = 1;\n    }\n\n};\n"],"names":[],"sourceRoot":""}