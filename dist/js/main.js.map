{"version":3,"file":"js/main.js","mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;ACAA;IAKI,eAAY,IAAY,EAAE,CAAS;QAJnC,UAAK,GAAG,CAAC,CAAC;QAKN,IAAI,CAAC,UAAU,GAAG,IAAI;QACtB,IAAI,CAAC,SAAS,GAAG,CAAC;QAClB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,WAAI,IAAI,CAAC,UAAU,YAAS,CAAoB;IAC5F,CAAC;IACD,oBAAI,GAAJ;QACI,IAAI,CAAC,KAAK,GAAG,CAAC;QACd,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;IACpD,CAAC;IAED,mBAAG,GAAH;QACI,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;IACpD,CAAC;IACL,YAAC;AAAD,CAAC;AAED,qBAAe,KAAK,CAAC;;;;;;;;;;;;;ACrBrB;IAWI,mBAAY,CAAS,EAAE,CAAS;QAVhC,kBAAa,GAAG,CAAC,CAAC;QAClB,cAAS,GAAG,KAAK,CAAC;QAIlB,gCAAgC;QAChC,qBAAgB,GAAG,oCAAoC,CAAC;QACxD,2FAA2F;QACnF,oBAAe,GAAmB,EAAE,CAAC;QAGzC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;IACxB,CAAC;IAED,wBAAI,GAAJ;QACI,IAAI,CAAC,SAAS,GAAG,KAAK;QACtB,IAAI,CAAC,eAAe,GAAG,EAAE;QACzB,IAAI,CAAC,oBAAoB,EAAE;QAC3B,IAAI,CAAC,SAAS,EAAE;IACpB,CAAC;IAED,6BAAS,GAAT;QACI,IAAI,SAAS,GAAG,EAAE,CAAC;QACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC,EAAE,EAAE;YACtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC,EAAE,EAAE;gBACtC,SAAS,IAAI,mCAAyB,CAAC,cAAI,CAAC,cAAU,CAAC;aAC1D;SACJ;QACA,QAAQ,CAAC,aAAa,CAAC,YAAY,CAAiB,CAAC,SAAS;YAC3D,SAAS,CAAC;IAClB,CAAC;IAED,wCAAoB,GAApB;QACI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC,EAAE,EAAE;YACtC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;SACxC;IACL,CAAC;IAED,8BAAU,GAAV,UAAW,CAAS,EAAE,CAAS;QAC3B,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC;QAChD,oCAAoC;IACxC,CAAC;IAED,6BAAS,GAAT,UAAU,QAAwB;QAC9B,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAC3C,QAAQ,CAAC,KAAK,CAAC,MAAM,GAAG,aAAa,CAAC;IAC1C,CAAC;IAED,8BAAU,GAAV,UAAW,MAAe;QACtB,IAAI,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAmB,CAAC;QACrE,UAAU,CAAC,SAAS,GAAG,8CAEf,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,iBAAU,IAAI,CAAC,aAAa,WAAQ,gMAKtD,CAAC;QACZ,yCAAyC;QACzC,UAAU,CAAC;YACP,UAAU,CAAC,KAAK,CAAC,SAAS,GAAG,UAAU,CAAC;QAC5C,CAAC,EAAE,GAAG,CAAC,CAAC;IACZ,CAAC;IAED,+BAAW,GAAX;QACI,IAAI,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC;QAC3B,4EAA4E;QAC5E,sCAAsC;QACtC,IAAI,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC;QAC5D,oFAAoF;QACpF,GAAG,GAAG,IAAI,MAAM,CACZ,uBAAgB,CAAC,yBAAe,CAAC,yBAAe,CAAC,kBAAe,CACnE;QACD,oFAAoF;QACpF,GAAG,GAAG,IAAI,MAAM,CACZ,YAAK,CAAC,yCAA+B,CAAC,yCAA+B,CAAC,UAAO,CAChF;QACD,8DAA8D;QAC9D,QAAQ,GAAG,IAAI,MAAM,CAAC,WAAI,CAAC,yBAAe,CAAC,yBAAe,CAAC,MAAG,CAAC;QAC/D,8DAA8D;QAC9D,cAAc,GAAG,IAAI,MAAM,CACvB,qBAAc,CAAC,yBAAe,CAAC,yBAAe,CAAC,gBAAa,CAC/D,CAAC;QAEN,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YAClB,OAAO,CAAC,GAAG,CAAC,mBAAmB,GAAG,CAAC,CAAC,CAAC;oCAE5B,CAAC;gBACN,IAAI,QAAQ,GAAG,EAAE;gBACb,iBAAiB;gBACjB,QAAQ,GAAG,OAAK,aAAa;qBACxB,QAAQ,EAAE;qBACV,MAAM,CAAC,CAAC,CAAC;qBACT,KAAK,CAAC,EAAE,CAAC;qBACT,IAAI,CAAC,GAAG,CAAC,CAAC;gBACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAK,UAAU,EAAE,CAAC,EAAE,EAAE;oBACtC,QAAQ,CAAC,IAAI,CAAC,OAAK,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC7C;gBAED,IAAI,QAAQ,CAAC,QAAQ,EAAE,KAAK,QAAQ,EAAE;oBAClC,4BAA4B;oBAC5B,IAAI,aAAa,GAAG,QAAQ,CAAC,cAAc,CACvC,UAAG,CAAC,cAAI,CAAC,CAAE,CACI,CAAC;oBACpB,aAAa,CAAC,kBAAkB,CAC5B,WAAW,EACX,gCAAgC,CACnC,CAAC;oBACF,IAAI,MAAI,GAAG,QAAQ,CAAC,aAAa,CAC7B,OAAO,CACS,CAAC;oBACrB,YAAY;oBACZ,UAAU,CAAC;wBACP,MAAI,CAAC,KAAK,CAAC,MAAM,GAAG,OAAO,CAAC;oBAChC,CAAC,EAAE,EAAE,CAAC,CAAC;oBACP,iBAAiB;oBACjB,OAAK,UAAU,CAAC,KAAK,CAAC,CAAC;oCAChB,IAAI;iBACd;;;YAhCL,mDAAmD;YACnD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC,EAAE;sCAA/B,CAAC;;;aAgCT;YACD,OAAO,KAAK,CAAC;SAChB;QACD,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YAClB,OAAO,CAAC,GAAG,CAAC,mBAAmB,GAAG,CAAC,CAAC,CAAC;oCAC5B,CAAC;gBACN,iBAAiB;gBACjB,IAAI,QAAQ,GAAG,OAAK,aAAa;qBAC5B,QAAQ,EAAE;qBACV,MAAM,CAAC,CAAC,CAAC;qBACT,KAAK,CAAC,EAAE,CAAC;qBACT,IAAI,CAAC,GAAG,CAAC,CAAC;gBACf,0DAA0D;gBAC1D,IAAI,OAAK,eAAe,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,KAAK,QAAQ,EAAE;oBACjD,0BAA0B;oBAC1B,IAAI,aAAa,GAAG,QAAQ,CAAC,cAAc,CACvC,UAAG,CAAC,cAAI,CAAC,CAAE,CACI,CAAC;oBACpB,aAAa,CAAC,kBAAkB,CAC5B,WAAW,EACX,gCAAgC,CACnC,CAAC;oBACF,IAAI,MAAI,GAAG,QAAQ,CAAC,aAAa,CAC7B,OAAO,CACS,CAAC;oBACrB,YAAY;oBACZ,UAAU,CAAC;wBACP,MAAI,CAAC,KAAK,CAAC,KAAK,GAAG,OAAO,CAAC;oBAC/B,CAAC,EAAE,EAAE,CAAC,CAAC;oBACP,iBAAiB;oBACjB,OAAK,UAAU,CAAC,KAAK,CAAC,CAAC;oCAChB,IAAI;iBACd;;;YA3BL,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC,EAAE;sCAA/B,CAAC;;;aA4BT;YACD,OAAO,KAAK,CAAC;SAChB;QACD,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YACvB,OAAO,CAAC,GAAG,CAAC,wBAAwB,GAAG,CAAC,CAAC,CAAC;YAC1C,aAAa;YACb,IAAI,aAAa,GAAG,QAAQ,CAAC,cAAc,CACvC,KAAK,CACU,CAAC;YACpB,aAAa,CAAC,kBAAkB,CAC5B,WAAW,EACX,mCAAmC,CACtC,CAAC;YACF,IAAI,MAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAoB,CAAC;YAC9D,YAAY;YACZ,UAAU,CAAC;gBACP,MAAI,CAAC,KAAK,CAAC,KAAK,GAAG,OAAO,CAAC;YAC/B,CAAC,EAAE,EAAE,CAAC,CAAC;YACP,iBAAiB;YACjB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YACvB,OAAO,IAAI,CAAC;SACf;QACD,IAAI,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YAC7B,OAAO,CAAC,GAAG,CAAC,8BAA8B,GAAG,CAAC,CAAC,CAAC;YAChD,MAAM;YACN,IAAI,aAAa,GAAG,QAAQ,CAAC,cAAc,CACvC,KAAK,CACU,CAAC;YACpB,aAAa,CAAC,kBAAkB,CAC5B,WAAW,EACX,0CAA0C,CAC7C,CAAC;YACF,IAAI,MAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAoB,CAAC;YAC9D,YAAY;YACZ,UAAU,CAAC;gBACP,MAAI,CAAC,KAAK,CAAC,KAAK,GAAG,OAAO,CAAC;YAC/B,CAAC,EAAE,EAAE,CAAC,CAAC;YACP,iBAAiB;YACjB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YACvB,OAAO,IAAI,CAAC;SACf;QACD,4DAA4D;QAC5D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;YACvB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,iBAAiB;YACjB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACtB,OAAO,IAAI,CAAC;SACf;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAED,yBAAK,GAAL,UAAM,MAAa,EAAE,KAAY;QAC7B,IAAI,CAAC,IAAI,EAAE;QACX,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,gBAAgB,GAAG,oCAAoC,CAAC;QAC7D,MAAM,CAAC,IAAI,EAAE;QACb,KAAK,CAAC,IAAI,EAAE;QACZ,IAAI,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAmB,CAAC;QACrE,UAAU,CAAC,KAAK,CAAC,SAAS,GAAG,UAAU,CAAC;QACxC,UAAU,CAAC,SAAS,GAAG,EAAE,CAAC;IAC9B,CAAC;IAED,4BAAQ,GAAR;QACI,IAAI,CAAC,IAAI,EAAE;QACX,IAAI,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAmB,CAAC;QACrE,UAAU,CAAC,KAAK,CAAC,SAAS,GAAG,UAAU;QACvC,UAAU,CAAC,SAAS,GAAG,EAAE;IAC7B,CAAC;IACL,gBAAC;AAAD,CAAC;AAED,SAAS,cAAc,CAAC,CAAS;IAC7B,qDAAqD;IACrD,sEAAsE;IAEtE,OAAO,UAAU,WAAgB,EAAE,WAAmB;QAClD,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IAC7B,CAAC,CAAC;AACN,CAAC;AAED,qBAAe,SAAS,CAAC;;;;;;;UC1OzB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACNA,mEAA0B;AAC1B,kFAAoC;AACpC,sEAA4B;AAE5B,CAAC;IACG,IAAI,SAAS,GAAG,IAAI,mBAAS,CAAC,CAAC,EAAE,CAAC,CAAC,EAC/B,MAAM,GAAU,IAAI,eAAK,CAAC,SAAS,EAAE,oCAAoC,CAAC,EAC1E,KAAK,GAAU,IAAI,eAAK,CAAC,SAAS,EAAE,mCAAmC,CAAC,CAAC;IAE7E,IAAI,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,YAAY,CAAmB,EAClE,iBAAiB,GAAG,QAAQ,CAAC,aAAa,CAAC,iBAAiB,CAAgB,CAAC;IAEjF,SAAS,CAAC,IAAI,EAAE;IAChB,SAAS,CAAC,OAAO,GAAG,UAAC,CAAa;QAC9B,IAAI,MAAM,GAAG,CAAC,CAAC,MAAwB,EACnC,MAAM,GAAG,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,EAC7B,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EACrB,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAE1B,oEAAoE;QACpE,IACI,MAAM,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC;YAC3B,MAAM,CAAC,MAAM,KAAK,CAAC;YACnB,SAAS,CAAC,SAAS;YAEnB,OAAO;QAEX,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAC5B,SAAS,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC3B,SAAS,CAAC,SAAS,GAAG,SAAS,CAAC,WAAW,EAAE,CAAC;QAC9C,qCAAqC;QACrC,4CAA4C;QAC5C,IAAI,SAAS,CAAC,aAAa,KAAK,CAAC,EAAE;YAC/B,uCAAuC;YACvC,SAAS,CAAC,aAAa,GAAG,CAAC,CAAC;YAC5B,SAAS,CAAC,gBAAgB,GAAG,KAAK,CAAC,SAAS,CAAC;YAC7C,iBAAiB,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;YAC9C,aAAa;YACb,IAAG,SAAS,CAAC,SAAS,EAAE;gBACpB,MAAM,CAAC,GAAG,EAAE;gBACZ,SAAS,EAAE;aACd;SACJ;aAAM;YACH,sCAAsC;YACtC,SAAS,CAAC,aAAa,GAAG,CAAC,CAAC;YAC5B,SAAS,CAAC,gBAAgB,GAAG,MAAM,CAAC,SAAS,CAAC;YAC9C,iBAAiB,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;YAC/C,aAAa;YACb,IAAG,SAAS,CAAC,SAAS,EAAE;gBACpB,KAAK,CAAC,GAAG,EAAE;gBACX,SAAS,EAAE;aACd;SACJ;IACL,CAAC,CAAC;IAEF,SAAS,SAAS;QACd,IAAI,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,cAAc,CAAsB,EACtE,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,iBAAiB,CAAsB,CAAC;QACjF,QAAQ,CAAC,OAAO,GAAG;YACf,SAAS,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC;YAC9B,iBAAiB,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS;QAClD,CAAC;QACD,WAAW,CAAC,OAAO,GAAG;YAClB,SAAS,CAAC,QAAQ,EAAE;QACxB,CAAC;IACL,CAAC;AACL,CAAC,CAAC,EAAE","sources":["webpack://tic-tac-toe/./src/css/style.css","webpack://tic-tac-toe/./src/ts/point.ts","webpack://tic-tac-toe/./src/ts/tableGame.ts","webpack://tic-tac-toe/webpack/bootstrap","webpack://tic-tac-toe/webpack/runtime/make namespace object","webpack://tic-tac-toe/./src/ts/main.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","class Point {\n    score = 0;\n    scoreHTML: HTMLElement;\n    pointHTML: string;\n    namePlayer: string;\n    constructor(name: string, p: string) {\n        this.namePlayer = name\n        this.pointHTML = p\n        this.scoreHTML = document.querySelector(`.${this.namePlayer} .score`) as HTMLSpanElement\n    }\n    init() {\n        this.score = 0\n        this.scoreHTML.innerHTML = this.score.toString()\n    }\n\n    win() {\n        this.score++;\n        this.scoreHTML.innerHTML = this.score.toString()\n    }\n}\n\nexport default Point;\n","class TableGame {\n    currentPlayer = 1;\n    isWinning = false;\n    // dimension\n    dimensionX: number;\n    dimensionY: number;\n    // currentPoint: Point = circle;\n    currentPointHTML = '<span class=\"point circle\"></span>';\n    // matrice d'adjacence qui represente le table (1 => player1; 2 => player2; 0 => case vide)\n    private _adjacentMatrix: AdjacentMatrix = [];\n\n    constructor(x: number, y: number) {\n        this.dimensionX = x;\n        this.dimensionY = y;\n    }\n\n    init() {\n        this.isWinning = false\n        this._adjacentMatrix = []\n        this.createAdjacentMatrix()\n        this.drawTable()\n    }\n\n    drawTable() {\n        let casesHTML = ``;\n        for (let i = 0; i < this.dimensionX; i++) {\n            for (let j = 0; j < this.dimensionY; j++) {\n                casesHTML += `<div class=\"case\" id=\"${i};${j}\"></div>`;\n            }\n        }\n        (document.querySelector(\".container\") as HTMLElement).innerHTML =\n            casesHTML;\n    }\n\n    createAdjacentMatrix() {\n        for (let i = 0; i < this.dimensionX; i++) {\n            this._adjacentMatrix.push([0, 0, 0]);\n        }\n    }\n\n    pushCoords(x: number, y: number) {\n        this._adjacentMatrix[x][y] = this.currentPlayer;\n        // console.log(this.adjacentMatrix);\n    }\n\n    drawPoint(caseHTML: HTMLDivElement) {\n        caseHTML.innerHTML = this.currentPointHTML;\n        caseHTML.style.cursor = \"not-allowed\";\n    }\n\n    showResult(isDraw: boolean) {\n        let resultHTML = document.querySelector(\".result\") as HTMLDivElement;\n        resultHTML.innerHTML = `\n            <div class=\"winner\">${\n                isDraw ? \"DRAW !!\" : `PLAYER ${this.currentPlayer} WON !`\n            }</div>\n            <div class=\"btn-container\">\n                <button class=\"reset\">Reset</button>\n                <button class=\"continue\">Continue</button>\n            </div>`;\n        // attendre pour afficher un peu la ligne\n        setTimeout(() => {\n            resultHTML.style.transform = \"scale(1)\";\n        }, 500);\n    }\n\n    checkWinner() {\n        let p = this.currentPlayer;\n        // convertir la matrice d'adjacence en string pour faciliter la verification\n        // ex : 1,0,0,1,0,0,1,0,0 => 100100100\n        let coords = this._adjacentMatrix.toString().split(\",\").join(\"\"),\n            // ex : 100100100, 010010010, 001001001 (1 => player1; 2 => player2; 0 => case vide)\n            col = new RegExp(\n                `(2|1|0){0,2}[${p}](2|1|0){2}[${p}](2|1|0){2}[${p}](2|1|0){0,2}`\n            ),\n            // ex : 111000000, 000111000, 000000111 (1 => player1; 2 => player2; 0 => case vide)\n            row = new RegExp(\n                `([${p}]{3}(2|1|0){6})|((2|1|0){3}[${p}]{3}(2|1|0){3})|((2|1|0){6}[${p}]{3})`\n            ),\n            // ex : 100010001 (1 => player1; 2 => player2; 0 => case vide)\n            diagonal = new RegExp(`[${p}](2|1|0){3}[${p}](2|1|0){3}[${p}]`),\n            // ex : 001010100 (1 => player1; 2 => player2; 0 => case vide)\n            contreDiagonal = new RegExp(\n                `(2|1|0){2}[${p}](2|1|0){1}[${p}](2|1|0){1}[${p}](2|1|0){2}`\n            );\n\n        console.log(coords);\n        if (col.test(coords)) {\n            console.log(\"winner circle col\" + p);\n            // chercher l'indice de depart pour tracer la ligne\n            for (let i = 0; i < this.dimensionX; i++) {\n                let colValue = [],\n                    // 1,1,1 ou 2,2,2\n                    sequence = this.currentPlayer\n                        .toString()\n                        .repeat(3)\n                        .split(\"\")\n                        .join(\",\");\n                for (let j = 0; j < this.dimensionX; j++) {\n                    colValue.push(this._adjacentMatrix[j][i]);\n                }\n\n                if (colValue.toString() === sequence) {\n                    // i correspond à la colonne\n                    let beginCaseHTML = document.getElementById(\n                        `${0};${i}`\n                    ) as HTMLDivElement;\n                    beginCaseHTML.insertAdjacentHTML(\n                        \"beforeend\",\n                        '<span class=\"line col\"></span>'\n                    );\n                    let line = document.querySelector(\n                        \".line\"\n                    ) as HTMLSpanElement;\n                    // animation\n                    setTimeout(() => {\n                        line.style.height = \"300px\";\n                    }, 10);\n                    // display result\n                    this.showResult(false);\n                    return true;\n                }\n            }\n            return false;\n        }\n        if (row.test(coords)) {\n            console.log(\"winner circle row\" + p);\n            for (let i = 0; i < this.dimensionX; i++) {\n                // 1,1,1 ou 2,2,2\n                let sequence = this.currentPlayer\n                    .toString()\n                    .repeat(3)\n                    .split(\"\")\n                    .join(\",\");\n                // prendre la ligne en un coup avec this.adjacentMatrix[i]\n                if (this._adjacentMatrix[i].toString() === sequence) {\n                    // i correspond à la ligne\n                    let beginCaseHTML = document.getElementById(\n                        `${i};${0}`\n                    ) as HTMLDivElement;\n                    beginCaseHTML.insertAdjacentHTML(\n                        \"beforeend\",\n                        '<span class=\"line row\"></span>'\n                    );\n                    let line = document.querySelector(\n                        \".line\"\n                    ) as HTMLSpanElement;\n                    // animation\n                    setTimeout(() => {\n                        line.style.width = \"300px\";\n                    }, 10);\n                    // display result\n                    this.showResult(false);\n                    return true;\n                }\n            }\n            return false;\n        }\n        if (diagonal.test(coords)) {\n            console.log(\"winner circle diagonal\" + p);\n            // depart 0;0\n            let beginCaseHTML = document.getElementById(\n                `0;0`\n            ) as HTMLDivElement;\n            beginCaseHTML.insertAdjacentHTML(\n                \"beforeend\",\n                '<span class=\"line rotate\"></span>'\n            );\n            let line = document.querySelector(\".line\") as HTMLSpanElement;\n            // animation\n            setTimeout(() => {\n                line.style.width = \"414px\";\n            }, 10);\n            // display result\n            this.showResult(false);\n            return true;\n        }\n        if (contreDiagonal.test(coords)) {\n            console.log(\"winner circle contrediagonal\" + p);\n            // 0;2\n            let beginCaseHTML = document.getElementById(\n                `0;2`\n            ) as HTMLDivElement;\n            beginCaseHTML.insertAdjacentHTML(\n                \"beforeend\",\n                '<span class=\"line rotate contre\"></span>'\n            );\n            let line = document.querySelector(\".line\") as HTMLSpanElement;\n            // animation\n            setTimeout(() => {\n                line.style.width = \"414px\";\n            }, 10);\n            // display result\n            this.showResult(false);\n            return true;\n        }\n        // au cas où il n'y a plus de case vide mais pas de vainquer\n        if (!coords.includes(\"0\")) {\n            console.log(\"draw\");\n            // display result\n            this.showResult(true);\n            return true;\n        }\n        return false;\n    }\n\n    reset(circle: Point, croix: Point) {\n        this.init()\n        this.currentPlayer = 1;\n        this.currentPointHTML = '<span class=\"point circle\"></span>';\n        circle.init()\n        croix.init()\n        let resultHTML = document.querySelector(\".result\") as HTMLDivElement;\n        resultHTML.style.transform = \"scale(0)\";\n        resultHTML.innerHTML = \"\";\n    }\n\n    continue() {\n        this.init()\n        let resultHTML = document.querySelector(\".result\") as HTMLDivElement;\n        resultHTML.style.transform = \"scale(0)\"\n        resultHTML.innerHTML = \"\"\n    }\n}\n\nfunction checkDimension(x: number) {\n    // if(x !== y) throw new Error(\"x is not equal to y\")\n    // if((x < 3) || (x > 5)) throw new Error(\"dimension between 3 and 5\")\n\n    return function (constructor: any, propertykey: string) {\n        console.log(constructor);\n    };\n}\n\nexport default TableGame;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import \"../css/style.css\";\nimport TableGame from \"./tableGame\";\nimport Point from \"./point\";\n\n(() => {\n    let tableGame = new TableGame(3, 3),\n        circle: Point = new Point('player1', '<span class=\"point circle\"></span>'),\n        croix: Point = new Point('player2', '<span class=\"point croix\"></span>');\n\n    let container = document.querySelector(\".container\") as HTMLDivElement,\n        currentPlayerHTML = document.querySelector(\".current-player\") as HTMLElement;\n        \n    tableGame.init()\n    container.onclick = (e: MouseEvent) => {\n        let target = e.target as HTMLDivElement,\n            coords = target.id.split(\";\"),\n            x = Number(coords[0]),\n            y = Number(coords[1]);\n    \n        // si on a cliqué sur une balise à part la \".case\" (ex: .point; gap)\n        if (\n            target.innerHTML.length > 0 ||\n            coords.length !== 2 ||\n            tableGame.isWinning\n        )\n            return;\n    \n        tableGame.drawPoint(target);\n        tableGame.pushCoords(x, y);\n        tableGame.isWinning = tableGame.checkWinner();\n        // player 1 : circle; player 2: croix\n        // change currentPlayer and currentPointHTML\n        if (tableGame.currentPlayer === 1) {\n            // tableGame.checkWinner(circle, x, y);\n            tableGame.currentPlayer = 2;\n            tableGame.currentPointHTML = croix.pointHTML;\n            currentPlayerHTML.innerHTML = croix.pointHTML;\n            // si gagnant\n            if(tableGame.isWinning) {\n                circle.win()\n                btnResult()\n            }\n        } else {\n            // tableGame.checkWinner(croix, x, y);\n            tableGame.currentPlayer = 1;\n            tableGame.currentPointHTML = circle.pointHTML;\n            currentPlayerHTML.innerHTML = circle.pointHTML;\n            // si gagnant\n            if(tableGame.isWinning) {\n                croix.win()\n                btnResult()\n            }\n        }\n    };    \n    \n    function btnResult() {\n        let btnReset = document.querySelector(\"button.reset\") as HTMLButtonElement,\n            btnContinue = document.querySelector(\"button.continue\") as HTMLButtonElement;\n        btnReset.onclick = () => {\n            tableGame.reset(circle, croix)\n            currentPlayerHTML.innerHTML = circle.pointHTML\n        }\n        btnContinue.onclick = () => {\n            tableGame.continue()\n        }\n    }\n})()\n"],"names":[],"sourceRoot":""}